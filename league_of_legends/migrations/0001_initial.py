# Generated by Django 5.1.1 on 2024-10-08 12:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('champ_id', models.AutoField(primary_key=True, serialize=False)),
                ('champ_name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'champion',
            },
        ),
        migrations.CreateModel(
            name='Plateform',
            fields=[
                ('id_plateform', models.AutoField(primary_key=True, serialize=False)),
                ('name_plateform', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'plateform',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'player',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id_position', models.AutoField(primary_key=True, serialize=False)),
                ('name_position', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'position',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id_seasonn', models.AutoField(primary_key=True, serialize=False)),
                ('season', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'season',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('duration', models.SmallIntegerField(null=True)),
                ('winner', models.SmallIntegerField(null=True)),
                ('first_tower', models.SmallIntegerField(null=True)),
                ('first_blood', models.SmallIntegerField(null=True)),
                ('first_inhibitor', models.SmallIntegerField(null=True)),
                ('first_baron', models.SmallIntegerField(null=True)),
                ('first_dragon', models.SmallIntegerField(null=True)),
                ('first_harry', models.SmallIntegerField(null=True)),
                ('tower_kills', models.IntegerField(null=True)),
                ('inhibitor_kills', models.IntegerField(null=True)),
                ('baron_kills', models.IntegerField(null=True)),
                ('dragon_kills', models.IntegerField(null=True)),
                ('herald_kills', models.IntegerField(null=True)),
                ('id_plateform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_of_legends.plateform')),
                ('id_seasonn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_of_legends.season')),
            ],
            options={
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_game', models.DateField(null=True)),
                ('champ_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_of_legends.champion')),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_of_legends.game')),
                ('player_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_of_legends.player')),
                ('id_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league_of_legends.position')),
            ],
            options={
                'db_table': 'participant',
                'unique_together': {('id_position', 'player_id', 'game_id', 'champ_id')},
            },
        ),
    ]
